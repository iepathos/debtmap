{
  "location": {
    "file": "src/analysis/call_graph/function_pointer.rs",
    "function": "FunctionPointerVisitor::analyze_function_pointer_assignment",
    "line": 315
  },
  "debt_type": {
    "ComplexityHotspot": {
      "cyclomatic": 6,
      "cognitive": 15
    }
  },
  "unified_score": {
    "complexity_factor": 6.1,
    "coverage_factor": 10.0,
    "dependency_factor": 1.0,
    "role_multiplier": 1.3,
    "final_score": 10.0
  },
  "function_role": "PureLogic",
  "recommendation": {
    "primary_action": "Extract nested processing, complex calculations to reduce complexity 6 → ~1",
    "rationale": "Complex function (cyclo=6, cog=15, nesting=5) with 2 suggested extraction patterns. Predicted complexity reduction: 83%",
    "implementation_steps": [
      "Extract nested logic (depth 5) → process_*() functions",
      "Extract calculations from 3 cognitive complexity → calculate_*()",
      "Add 8 unit tests (3-5 per extracted function)"
    ],
    "related_items": []
  },
  "expected_impact": {
    "coverage_improvement": 0.0,
    "lines_reduction": 0,
    "complexity_reduction": 3.0,
    "risk_reduction": 3.5
  },
  "transitive_coverage": null,
  "upstream_dependencies": 1,
  "downstream_dependencies": 2,
  "upstream_callers": [
    "FunctionPointerVisitor::visit_local"
  ],
  "downstream_callees": [
    "FunctionPointerVisitor::extract_function_name_from_path",
    "FunctionPointerVisitor::get_line_number"
  ],
  "nesting_depth": 5,
  "function_length": 35,
  "cyclomatic_complexity": 6,
  "cognitive_complexity": 15,
  "entropy_details": {
    "entropy_score": 0.28089381568801525,
    "pattern_repetition": 0.7407407407407407,
    "original_complexity": 6,
    "adjusted_complexity": 6,
    "dampening_factor": 1.0
  },
  "is_pure": false,
  "purity_confidence": 1.0
}
