{
  "chapter_id": "multi-pass-analysis",
  "chapter_title": "Multi-Pass Analysis",
  "chapter_file": "book/src/multi-pass-analysis.md",
  "drift_detected": true,
  "severity": "medium",
  "quality_assessment": "Chapter is comprehensive and mostly accurate, but has minor inconsistencies in configuration field names and some missing implementation details. The chapter provides excellent conceptual coverage with detailed examples.",
  "issues": [
    {
      "type": "incorrect_example",
      "severity": "medium",
      "section": "Configuration Options (line 575)",
      "description": "Chapter shows OutputFormat with 'Json' variant, but actual implementation has additional variants including 'Yaml', 'Html', 'Text'",
      "current_content": "output_format: OutputFormat::Json,",
      "should_be": "output_format: OutputFormat::Json, // Also available: Yaml, Markdown, Html, Text",
      "fix_suggestion": "Update OutputFormat documentation to include all available variants: Json, Yaml, Markdown, Html, Text",
      "source_reference": "src/analysis/diagnostics/mod.rs:123-129"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "CLI Usage",
      "description": "Chapter doesn't mention that --show-attribution requires --multi-pass to be enabled",
      "should_add": "Note that --attribution flag requires --multi-pass to be enabled first",
      "fix_suggestion": "Add a note in the CLI Usage section clarifying the dependency between --multi-pass and --attribution flags",
      "source_reference": "src/cli.rs:192-198"
    },
    {
      "type": "incomplete_explanation",
      "severity": "low",
      "section": "Comparative Analysis",
      "description": "Chapter shows compare_complexity function signature but doesn't mention that it's a standalone function, not a method on MultiPassAnalyzer",
      "current_content": "use debtmap::analysis::multi_pass::compare_complexity;",
      "should_add": "Clarify that compare_complexity is a module-level function that performs complete analysis internally",
      "fix_suggestion": "Add a note explaining that compare_complexity is a convenience function that internally creates analyzers and performs the analysis",
      "source_reference": "src/analysis/multi_pass.rs:532-541"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Configuration Options",
      "description": "Chapter shows default value for detail_level as 'Standard', but doesn't mention that CLI default is also 'standard' (lowercase)",
      "should_add": "Note that detail_level uses lowercase in CLI (--detail-level standard) but enum is DetailLevel::Standard",
      "fix_suggestion": "Clarify the difference between CLI parameter syntax and programmatic enum values",
      "source_reference": "src/cli.rs:200-202, src/analysis/multi_pass.rs:316"
    },
    {
      "type": "outdated_information",
      "severity": "medium",
      "section": "ComparativeAnalysis struct (line 545)",
      "description": "Chapter shows ComparativeAnalysis with before/after fields, but actual implementation only has change metrics",
      "current_content": "pub struct ComparativeAnalysis {\n    pub before: MultiPassResult,\n    pub after: MultiPassResult,\n    pub complexity_change: i32,\n    ...",
      "should_be": "pub struct ComparativeAnalysis {\n    pub complexity_change: i32,\n    pub cognitive_change: i32,\n    pub formatting_impact_change: f32,\n    pub improvements: Vec<String>,\n    pub regressions: Vec<String>,\n}",
      "fix_suggestion": "Update the ComparativeAnalysis struct definition to match actual implementation - it only contains change metrics, not full before/after results",
      "source_reference": "src/analysis/multi_pass.rs:544-551"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Performance Considerations",
      "description": "Chapter mentions --jobs flag but doesn't clarify that it's a general debtmap flag, not multi-pass specific",
      "should_add": "Clarify that --jobs is a general parallelism control for all debtmap analysis, not specific to multi-pass",
      "fix_suggestion": "Add note that multi-pass benefits from parallelism when analyzing multiple files, but overhead is still calculated per-file",
      "source_reference": "src/cli.rs:160-162"
    },
    {
      "type": "unclear_content",
      "severity": "low",
      "section": "Attribution Engine (line 96)",
      "description": "Chapter describes pattern complexity attribution but doesn't clarify that pattern detection requires separate enabling",
      "should_add": "Note that pattern complexity analysis may require enabling pattern detection features",
      "fix_suggestion": "Add a cross-reference to pattern detection configuration or clarify that it's part of standard multi-pass analysis",
      "source_reference": "src/analysis/attribution/mod.rs:35-36, src/analysis/attribution/pattern_tracker.rs"
    }
  ],
  "positive_aspects": [
    "Excellent visual diagram of two-pass analysis process",
    "Comprehensive examples with realistic Rust code",
    "Clear explanation of logical vs formatting complexity",
    "Detailed sample output showing attribution breakdown",
    "Good coverage of performance overhead and optimization tips",
    "Well-structured progression from concepts to usage to implementation",
    "Helpful comparative analysis examples",
    "Clear explanation of insight types and recommendations",
    "Good coverage of when to use multi-pass vs standard analysis",
    "Spec 84 future enhancement clearly documented"
  ],
  "improvement_suggestions": [
    "Update ComparativeAnalysis struct definition to match implementation",
    "Add note about OutputFormat variants (Yaml, Html, Text)",
    "Clarify dependency between --multi-pass and --attribution flags",
    "Add example showing how to enable performance_tracking programmatically",
    "Include note about pattern detection configuration",
    "Add troubleshooting section for common multi-pass issues",
    "Consider adding example of multi-pass output in JSON format",
    "Link to pattern detection chapter for more details on pattern complexity"
  ],
  "metadata": {
    "analyzed_at": "2025-10-30",
    "feature_inventory": ".prodigy/book-analysis/features.json",
    "topics_covered": [
      "Multi-pass analysis overview",
      "Complexity attribution",
      "Attribution display options",
      "Configuration and usage",
      "Performance considerations",
      "Comparative analysis",
      "Insights and recommendations"
    ],
    "validation_focus": "Check that multi-pass analysis and attribution features are documented",
    "code_references_verified": [
      "src/analysis/multi_pass.rs",
      "src/analysis/attribution/mod.rs",
      "src/analysis/diagnostics/mod.rs",
      "src/cli.rs"
    ]
  }
}
