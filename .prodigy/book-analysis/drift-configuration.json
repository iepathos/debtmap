{
  "chapter_id": "configuration",
  "chapter_title": "Configuration",
  "chapter_file": "book/src/configuration.md",
  "drift_detected": true,
  "severity": "medium",
  "quality_assessment": "Chapter is comprehensive and accurate overall, but has several outdated values for role multipliers and a few minor inconsistencies with implementation defaults. Most configuration sections accurately reflect the codebase.",
  "issues": [
    {
      "type": "outdated_information",
      "severity": "medium",
      "section": "Role Coverage Weights (lines 104-114)",
      "description": "Chapter shows io_wrapper coverage weight as 0.7, but implementation default is 0.5",
      "current_content": "io_wrapper = 0.7        # Reduce penalty for integration-tested I/O",
      "should_be": "io_wrapper = 0.5        # I/O wrappers are integration tested (default: 0.5)",
      "fix_suggestion": "Update io_wrapper coverage weight from 0.7 to 0.5 to match implementation default in src/config/scoring.rs:327-329",
      "source_reference": "src/config/scoring.rs:327-329"
    },
    {
      "type": "outdated_information",
      "severity": "medium",
      "section": "Role Coverage Weights (lines 104-114)",
      "description": "Chapter shows pure_logic coverage weight as 1.2, but implementation default is 1.0",
      "current_content": "pure_logic = 1.2        # Emphasize testing pure logic",
      "should_be": "pure_logic = 1.0        # Pure logic should have unit tests, no reduction (default: 1.0)",
      "fix_suggestion": "Update pure_logic coverage weight from 1.2 to 1.0 to match implementation default",
      "source_reference": "src/config/scoring.rs:323-325"
    },
    {
      "type": "missing_content",
      "severity": "medium",
      "section": "Role Multipliers",
      "description": "Chapter is missing the 'debug' role multiplier entirely",
      "should_add": "debug = 0.3             # Debug/diagnostic functions (default: 0.3)",
      "fix_suggestion": "Add documentation for the debug role multiplier which has the lowest priority for testing (spec 119)",
      "source_reference": "src/config/scoring.rs:171-173, 213-215"
    },
    {
      "type": "missing_content",
      "severity": "medium",
      "section": "Role Coverage Weights",
      "description": "Chapter is missing the 'debug' role coverage weight",
      "should_add": "debug = 0.3             # Debug functions have lowest coverage expectations (default: 0.3)",
      "fix_suggestion": "Add documentation for debug role coverage weight which matches its role multiplier at 0.3",
      "source_reference": "src/config/scoring.rs:335-337"
    },
    {
      "type": "missing_content",
      "severity": "medium",
      "section": "Validation Thresholds (lines 318-330)",
      "description": "Chapter shows deprecated validation threshold fields but doesn't note they're deprecated in implementation",
      "current_content": "max_high_complexity_count = 100       # Maximum high complexity functions (default: 100)\nmax_debt_items = 2000                 # Maximum technical debt items (default: 2000)\nmax_high_risk_functions = 50          # Maximum high-risk functions (default: 50)",
      "should_be": "These fields are DEPRECATED since v0.3.0 in favor of max_debt_density (scale-independent metric)",
      "fix_suggestion": "Add deprecation warnings for max_high_complexity_count, max_debt_items, and max_high_risk_functions. Reference src/config.rs:840-860 which marks them deprecated.",
      "source_reference": "src/config.rs:840-860"
    },
    {
      "type": "outdated_information",
      "severity": "low",
      "section": "Validation Thresholds defaults",
      "description": "Chapter shows max_total_debt_score default as 1000, but implementation uses 10000",
      "current_content": "max_total_debt_score = 1000           # Maximum total debt score (default: 1000)",
      "should_be": "max_total_debt_score = 10000          # Maximum total debt score (default: 10000)",
      "fix_suggestion": "Update default from 1000 to 10000 to match implementation's safety net threshold",
      "source_reference": "src/config.rs:896-898"
    },
    {
      "type": "incomplete_explanation",
      "severity": "low",
      "section": "Thresholds Configuration (line 300)",
      "description": "Note about max_file_length mapping is correct but could be clearer about internal field name",
      "current_content": "**Note:** The TOML configuration accepts `max_file_length` (shown above), which maps to the internal struct field `max_file_lines`. Both names refer to the same setting.",
      "should_be": "This note is accurate. The ThresholdsConfig struct uses max_file_length in TOML.",
      "fix_suggestion": "Note is accurate. Consider clarifying that this aliasing is intentional for user-friendliness in the config file.",
      "source_reference": "src/config.rs:759"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Classification Configuration",
      "description": "Chapter doesn't mention the classification config section that groups constructors, accessors, and data_flow",
      "current_content": "Various sections mention constructor detection, but no central classification section",
      "should_add": "Document the [classification] section that groups constructor, accessor, and data flow detection configs",
      "fix_suggestion": "Add a subsection explaining the classification config structure that contains constructors, accessors, and data_flow sub-configs",
      "source_reference": "src/config.rs:717-731"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Advanced Configuration",
      "description": "Chapter mentions various advanced configs but doesn't document orchestration_adjustment, boilerplate_detection, or functional_analysis configs",
      "should_add": "Document orchestration_adjustment, boilerplate_detection, and functional_analysis configuration sections",
      "fix_suggestion": "Add subsections for these advanced features with their configuration options and defaults",
      "source_reference": "src/config.rs:682-710"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Complete Configuration Example (lines 796-865)",
      "description": "Example config is missing several advanced sections that are available",
      "current_content": "Example shows basic config but omits classification, functional_analysis, boilerplate_detection, etc.",
      "should_add": "Include examples of classification, functional_analysis, and other advanced configs in the complete example",
      "fix_suggestion": "Expand complete configuration example to show more of the available advanced options for users who need them",
      "source_reference": "src/config.rs:604-715"
    }
  ],
  "positive_aspects": [
    "Comprehensive coverage of most configuration sections",
    "Accurate explanation of scoring weights and validation",
    "Good examples showing practical usage",
    "Clear explanations of role-based adjustments with rationale",
    "Excellent coverage of god object detection with language-specific thresholds",
    "Thorough documentation of entropy configuration",
    "Good explanation of validation thresholds for CI",
    "Helpful troubleshooting section",
    "Clear precedence rules (CLI > config file > defaults)",
    "Well-organized with clear subsections"
  ],
  "improvement_suggestions": [
    "Update role coverage weight defaults to match implementation (pure_logic: 1.0, io_wrapper: 0.5)",
    "Add documentation for debug role and its multipliers",
    "Mark deprecated validation thresholds with warnings",
    "Update max_total_debt_score default to 10000",
    "Add classification config section overview",
    "Document orchestration_adjustment, boilerplate_detection, and functional_analysis configs",
    "Expand complete configuration example to include more advanced options",
    "Add notes about deprecated fields being removed in v1.0",
    "Consider adding a migration guide for deprecated validation thresholds"
  ],
  "metadata": {
    "analyzed_at": "2025-10-30",
    "feature_inventory": ".prodigy/book-analysis/features.json",
    "topics_covered": [
      "Config files",
      "Scoring configuration",
      "Role multipliers",
      "Thresholds",
      "Validation thresholds",
      "Language configuration",
      "Exclusion patterns",
      "Display configuration",
      "Output configuration",
      "Normalization",
      "Entropy configuration",
      "God object detection",
      "Context-aware detection",
      "Error handling",
      "Pure mapping patterns",
      "External API configuration"
    ],
    "validation_focus": "Check config options match implementation in src/config/"
  }
}
