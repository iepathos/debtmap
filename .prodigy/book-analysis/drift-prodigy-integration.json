{
  "chapter_id": "prodigy-integration",
  "chapter_title": "Prodigy Integration",
  "chapter_file": "book/src/prodigy-integration.md",
  "drift_detected": true,
  "severity": "high",
  "quality_assessment": "Chapter has significant drift from actual Prodigy implementation. Multiple incorrect commands, missing features, and outdated syntax throughout.",
  "issues": [
    {
      "type": "incorrect_command",
      "severity": "high",
      "section": "Quick Start - Run Workflow",
      "description": "Chapter shows 'prodigy cook' command which does not exist in Prodigy CLI",
      "current_content": "prodigy cook workflows/debtmap.yml -wyn 5",
      "should_be": "prodigy run workflows/debtmap.yml -yn 5",
      "fix_suggestion": "Replace all instances of 'prodigy cook' with 'prodigy run'. The 'cook' command does not exist in Prodigy CLI.",
      "source_reference": "prodigy --help shows 'run' command, not 'cook'"
    },
    {
      "type": "incorrect_command",
      "severity": "high",
      "section": "Run Workflow - Command Flags",
      "description": "The -w flag for worktrees is documented but does not exist in 'prodigy run' command",
      "current_content": "- `-w` - Create an isolated git worktree for changes\n- `-y` - Auto-confirm workflow steps (skip prompts)\n- `-n 5` - Run workflow for up to 5 iterations",
      "should_be": "- `-y` - Auto-confirm workflow steps (skip prompts)\n- `-n 5` - Run workflow for up to 5 iterations (--max-iterations)\n\nNote: Worktrees are managed via 'prodigy worktree' command, not -w flag",
      "fix_suggestion": "Remove documentation of -w flag. Explain that worktrees are managed separately via 'prodigy worktree' command or MapReduce mode creates them automatically.",
      "source_reference": "prodigy run --help shows no -w option"
    },
    {
      "type": "missing_content",
      "severity": "high",
      "section": "Map-Reduce Workflows",
      "description": "Chapter mentions map-reduce but doesn't show actual MapReduce workflow syntax which exists in the codebase",
      "should_add": "Actual MapReduce workflow example showing:\n- mode: mapreduce\n- setup phase with commands\n- map phase with input, json_path, agent_template, max_parallel\n- reduce phase (if applicable)\n- Variables like ${item}, ${item_id}",
      "fix_suggestion": "Replace vague \"consult Prodigy documentation\" section with concrete MapReduce workflow example from workflows/debtmap-reduce.yml. Show setup/map/reduce structure, agent_template array format, max_parallel, filter, sort_by, max_items configuration.",
      "source_reference": "workflows/debtmap-reduce.yml:1-80"
    },
    {
      "type": "missing_content",
      "severity": "medium",
      "section": "Prodigy CLI Commands",
      "description": "Chapter doesn't document important Prodigy commands that users may need",
      "should_add": "Document key commands:\n- prodigy resume <SESSION_ID> - Resume interrupted workflow\n- prodigy checkpoints - List available checkpoints\n- prodigy worktree - Manage git worktrees\n- prodigy resume-job - Resume MapReduce job\n- prodigy progress - View MapReduce progress\n- prodigy events - View MapReduce events\n- prodigy dlq - Manage Dead Letter Queue",
      "fix_suggestion": "Add section on 'Useful Prodigy Commands' after 'Quick Start' explaining resume, checkpoints, worktree management, MapReduce-specific commands.",
      "source_reference": "prodigy --help"
    },
    {
      "type": "outdated_information",
      "severity": "medium",
      "section": "MapReduce Variables",
      "description": "Chapter doesn't document MapReduce-specific variables used in workflows",
      "current_content": "No mention of ${item}, ${item_id}, ${validation.gaps}, ${validation.attempt_number}",
      "should_be": "Document MapReduce variables:\n- ${item} - Current item being processed in map phase\n- ${item_id} - Unique ID for current item\n- ${validation.gaps} - Validation gaps from validation result\n- ${validation.attempt_number} - Current retry attempt number\n- ${shell.output} - Output from shell command",
      "fix_suggestion": "Add subsection under 'Workflow Configuration' explaining MapReduce-specific variables available in workflows.",
      "source_reference": "workflows/debtmap-reduce.yml:23-49"
    },
    {
      "type": "incomplete_explanation",
      "severity": "medium",
      "section": "Workflow Step Types",
      "description": "Chapter doesn't explain all step-level features available",
      "should_add": "Missing documentation for:\n- timeout field on steps\n- capture_output field\n- Multiple commands in validation.commands\n- validation.on_incomplete structure with nested commands\n- commit_required field",
      "fix_suggestion": "Expand 'Workflow Step Types' section with complete field reference and examples of timeout, capture_output, nested validation commands.",
      "source_reference": "workflows/debtmap.yml and workflows/debtmap-reduce.yml"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Workflow Configuration",
      "description": "MapReduce mode configuration options not documented",
      "should_add": "Document MapReduce-specific configuration:\n- mode: mapreduce (at top level)\n- map.input: file path to JSON\n- map.json_path: JSONPath to items array\n- map.agent_template: array of commands for each item\n- map.max_parallel: parallel agent count\n- map.filter: filter expression for items\n- map.sort_by: sort expression\n- map.max_items: limit items processed",
      "fix_suggestion": "Add complete MapReduce configuration reference section showing all available fields and their usage.",
      "source_reference": "workflows/debtmap-reduce.yml:1-80"
    },
    {
      "type": "unclear_content",
      "severity": "low",
      "section": "Iteration Strategy",
      "description": "Chapter implies iterations are automatic workflow reruns, but doesn't clarify how MapReduce differs",
      "current_content": "Explains sequential workflow iterations well, but doesn't distinguish from MapReduce parallel processing",
      "should_be": "Clarify two iteration models:\n1. Sequential workflows: -n flag reruns entire workflow N times\n2. MapReduce workflows: Processes multiple items in parallel in single run",
      "fix_suggestion": "Add subsection distinguishing sequential iteration (-n flag) from MapReduce parallel processing to avoid confusion.",
      "source_reference": "workflows/debtmap.yml vs workflows/debtmap-reduce.yml"
    },
    {
      "type": "incorrect_example",
      "severity": "medium",
      "section": "Integration with CI/CD - GitHub Actions",
      "description": "GitHub Actions example uses 'prodigy cook' which doesn't exist",
      "current_content": "run: prodigy cook workflows/debtmap.yml -wyn 5",
      "should_be": "run: prodigy run workflows/debtmap.yml -yn 5",
      "fix_suggestion": "Update GitHub Actions example to use 'prodigy run' and remove -w flag. Explain how to use MapReduce mode for parallel processing in CI.",
      "source_reference": "prodigy run --help"
    },
    {
      "type": "incorrect_example",
      "severity": "medium",
      "section": "Integration with CI/CD - GitLab CI",
      "description": "GitLab CI example uses 'prodigy cook' which doesn't exist",
      "current_content": "- prodigy cook workflows/debtmap.yml -wyn 5",
      "should_be": "- prodigy run workflows/debtmap.yml -yn 5",
      "fix_suggestion": "Update GitLab CI example to use 'prodigy run' and remove -w flag.",
      "source_reference": "prodigy run --help"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Troubleshooting",
      "description": "Missing troubleshooting for MapReduce-specific issues",
      "should_add": "MapReduce troubleshooting:\n- How to resume failed MapReduce jobs\n- How to check MapReduce progress\n- How to view MapReduce events\n- How to manage Dead Letter Queue for failed items\n- Understanding worktree cleanup",
      "fix_suggestion": "Add MapReduce troubleshooting subsection covering resume, progress checking, DLQ management, worktree issues.",
      "source_reference": "prodigy resume-job, prodigy progress, prodigy events, prodigy dlq commands"
    },
    {
      "type": "missing_content",
      "severity": "medium",
      "section": "Prerequisites",
      "description": "Missing information about Prodigy installation source",
      "current_content": "cargo install prodigy",
      "should_be": "Installation instructions should mention:\n1. Where the prodigy crate is published (crates.io? GitHub?)\n2. Whether it's publicly available or requires access\n3. Minimum Rust version required",
      "fix_suggestion": "Clarify Prodigy installation: Is it on crates.io? GitHub repo? What's the canonical source?",
      "source_reference": "Installation prerequisites need verification"
    }
  ],
  "positive_aspects": [
    "Clear introduction and motivation for using Prodigy",
    "Good explanation of benefits (automated debt reduction, iterative improvement, safe experimentation)",
    "Comprehensive coverage of Claude slash commands with parameters",
    "Excellent workflow structure examples (sequential workflow is accurate)",
    "Good explanation of validation mechanism with threshold and on_incomplete",
    "Helpful troubleshooting section for common issues",
    "Clear explanation of target selection and prioritization",
    "Well-organized progressive structure from quick start to advanced topics"
  ],
  "improvement_suggestions": [
    "Add concrete MapReduce workflow example (from debtmap-reduce.yml) to replace vague reference",
    "Create side-by-side comparison table: Sequential vs MapReduce workflows",
    "Add flowchart showing MapReduce workflow execution (setup → map agents in parallel → reduce)",
    "Include section on monitoring long-running MapReduce jobs (progress, events, logs)",
    "Add examples of filter and sort_by expressions for MapReduce",
    "Document resume functionality more prominently for interrupted workflows",
    "Add section on worktree management and cleanup",
    "Include troubleshooting for MapReduce-specific issues (DLQ, failed items, resume)",
    "Add best practices for choosing between sequential and MapReduce modes",
    "Consider adding diagram of MapReduce architecture (setup → N parallel agents → reduce → merge)"
  ],
  "metadata": {
    "analyzed_at": "2025-10-20",
    "feature_inventory": ".prodigy/book-analysis/features.json",
    "topics_covered": [
      "What is Prodigy",
      "Benefits of automation",
      "Workflow configuration",
      "Claude slash commands",
      "Sequential workflows",
      "MapReduce workflows (incomplete)",
      "Validation mechanism",
      "Error handling",
      "CI/CD integration",
      "Troubleshooting"
    ],
    "validation_focus": "Check that Prodigy workflow integration is documented with workflow file examples"
  }
}
