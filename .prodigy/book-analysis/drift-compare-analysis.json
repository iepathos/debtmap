{
  "chapter_id": "compare-analysis",
  "chapter_title": "Compare Analysis",
  "chapter_file": "book/src/compare-analysis.md",
  "drift_detected": true,
  "severity": "critical",
  "quality_assessment": "Chapter documents comprehensive comparison features that don't fully match the current implementation. The actual implementation is validation-focused rather than full-featured comparison. Types exist but implementation incomplete.",
  "issues": [
    {
      "type": "incomplete_implementation",
      "severity": "critical",
      "section": "Compare Command Implementation",
      "description": "Chapter documents comprehensive comparison features (target tracking, fuzzy matching, improvements tracking), but actual implementation in compare_debtmap.rs is validation-focused with simpler logic",
      "current_content": "compare_debtmap.rs implements basic validation (resolved items, improved items, new items, unchanged critical) without target location tracking, fuzzy matching, or detailed improvement metrics",
      "should_be": "Full comparison implementation matching ComparisonResult type with target tracking, match strategies (Exact, FuzzyFunction, FuzzyFile), and detailed improvement metrics",
      "fix_suggestion": "Either: (1) Update chapter to accurately reflect current validation-focused implementation, OR (2) Implement full comparison features documented in chapter using types defined in src/comparison/types.rs",
      "source_reference": "src/commands/compare_debtmap.rs vs src/comparison/types.rs"
    },
    {
      "type": "missing_feature",
      "severity": "high",
      "section": "Target Location Tracking",
      "description": "Chapter extensively documents target location tracking with fuzzy matching (Exact, FuzzyFunction, FuzzyFile), but implementation doesn't support target locations or matching strategies",
      "should_add": "Target location parsing, fuzzy matching logic, match confidence scoring as documented in lines 41-104 of chapter",
      "fix_suggestion": "Implement target location tracking using ComparisonResult::target_item or document that this feature is planned/not yet available",
      "source_reference": "src/comparison/types.rs:TargetComparison (defined but unused)"
    },
    {
      "type": "missing_feature",
      "severity": "high",
      "section": "Matching Strategies",
      "description": "Chapter documents three matching strategies (Exact 1.0, FuzzyFunction 0.8-0.95, FuzzyFile 0.6-0.8) with confidence scores, but no matching logic exists",
      "should_add": "Implement fuzzy matching for renamed/moved functions with confidence scoring",
      "fix_suggestion": "Add fuzzy matching module or document as future feature with clear roadmap",
      "source_reference": "Chapter lines 94-104 vs src/commands/compare_debtmap.rs (no matching logic)"
    },
    {
      "type": "outdated_information",
      "severity": "high",
      "section": "Critical Score Threshold",
      "description": "Chapter states critical items have score >= 60 throughout examples and documentation",
      "current_content": "critical_items: Items with score >= 60 (lines 91, 154, 170, 177)",
      "should_be": "critical_items: Items with score >= 8.0 (actual CRITICAL_SCORE_THRESHOLD in code)",
      "fix_suggestion": "Update all references to critical threshold from 60 to 8.0 throughout chapter",
      "source_reference": "src/commands/compare_debtmap.rs:429 (CRITICAL_SCORE_THRESHOLD = 8.0)"
    },
    {
      "type": "missing_feature",
      "severity": "medium",
      "section": "Improvement Percentage Calculations",
      "description": "Chapter documents detailed improvement percentage calculations (score_reduction_pct, complexity_reduction_pct, coverage_improvement_pct) with specific examples",
      "current_content": "Implementation only calculates basic complexity_reduction as average across improved items",
      "should_be": "Per-item improvement percentages as shown in chapter examples (lines 221-237, 287-295)",
      "fix_suggestion": "Enhance identify_improved_items to return per-item improvement metrics or clarify chapter shows aspirational API",
      "source_reference": "src/commands/compare_debtmap.rs:303-369 vs chapter examples"
    },
    {
      "type": "missing_feature",
      "severity": "medium",
      "section": "Regression Detection with Description",
      "description": "Chapter shows regressions include location, score, debt_type, and description fields",
      "current_content": "Implementation identifies new critical items but doesn't populate RegressionItem structure with debt_type or description",
      "should_be": "Full RegressionItem struct as defined in types.rs with debt_type and description populated",
      "fix_suggestion": "Enhance regression detection to extract debt type and generate descriptions, or output simpler format",
      "source_reference": "src/comparison/types.rs:104-110 vs src/commands/compare_debtmap.rs:383-421"
    },
    {
      "type": "missing_feature",
      "severity": "medium",
      "section": "Output Formats (Markdown, Terminal)",
      "description": "Chapter documents markdown and terminal output formats in addition to JSON",
      "current_content": "CLI accepts format parameter but implementation only outputs validation JSON",
      "should_be": "Markdown formatter for PR comments and terminal formatter for human-readable output",
      "fix_suggestion": "Implement markdown/terminal formatters or remove format options from CLI until implemented",
      "source_reference": "src/cli.rs:421-422 vs src/commands/compare_debtmap.rs (only JSON output)"
    },
    {
      "type": "inconsistent_structure",
      "severity": "medium",
      "section": "Output Structure",
      "description": "Chapter shows ComparisonResult structure with metadata, target_item, project_health, regressions, improvements, summary",
      "current_content": "Implementation outputs ValidationResult with different fields: completion_percentage, status, improvements (strings), remaining_issues, gaps, before_summary, after_summary",
      "should_be": "ComparisonResult matching documented structure in chapter examples",
      "fix_suggestion": "Either refactor implementation to use ComparisonResult type, or update chapter to document ValidationResult structure",
      "source_reference": "src/comparison/types.rs:4-22 vs src/commands/compare_debtmap.rs:9-17"
    },
    {
      "type": "missing_feature",
      "severity": "low",
      "section": "Improvement Types Enum",
      "description": "Chapter shows improvement_type with Resolved and ScoreReduced values",
      "current_content": "types.rs defines ImprovementType enum with Resolved, ScoreReduced, ComplexityReduced, CoverageImproved but not used in implementation",
      "should_be": "ImprovementType populated in improvement items",
      "fix_suggestion": "Use ImprovementType enum or simplify chapter documentation to match simpler implementation",
      "source_reference": "src/comparison/types.rs:120-126 (unused enum)"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Plan File Parsing",
      "description": "Chapter documents extracting target location from IMPLEMENTATION_PLAN.md with specific format",
      "should_add": "Implementation to parse plan files and extract 'Location:' field as documented in lines 58-81",
      "fix_suggestion": "Add plan parsing logic or clarify that --plan is not yet functional",
      "source_reference": "src/cli.rs:412 (plan option exists) but no parsing code in compare_debtmap.rs"
    }
  ],
  "positive_aspects": [
    "Chapter is comprehensive and well-organized with clear examples",
    "CLI argument structure matches documented interface exactly",
    "Type definitions in src/comparison/types.rs align perfectly with chapter documentation",
    "CI/CD integration examples are practical and complete",
    "Troubleshooting section covers common scenarios",
    "Progressive disclosure from basic to advanced usage",
    "Good coverage of all documented topics"
  ],
  "improvement_suggestions": [
    "Add clear 'Implementation Status' section noting which features are implemented vs planned",
    "Either complete the full ComparisonResult implementation or update chapter to document ValidationResult",
    "Correct critical threshold from 60 to 8.0 throughout all examples",
    "Add examples using actual ValidationResult output structure users will see",
    "Include note about comparison vs validation distinction",
    "Consider splitting into 'Compare Command (Planned)' and 'Validation (Current)' chapters",
    "Add version compatibility notes for when full comparison features will be available"
  ],
  "metadata": {
    "analyzed_at": "2025-10-30",
    "feature_inventory": ".prodigy/book-analysis/features.json",
    "topics_covered": [
      "Compare command usage",
      "Target location tracking",
      "Project health trends",
      "Regression detection",
      "Before/after metrics comparison",
      "Improvement percentage calculations",
      "Integration with CI/CD"
    ],
    "validation_focus": "Check that compare command features and workflow integration are documented"
  }
}
