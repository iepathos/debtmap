{
  "chapter_id": "architectural-analysis",
  "chapter_title": "Architectural Analysis",
  "chapter_file": "book/src/architectural-analysis.md",
  "drift_detected": true,
  "severity": "medium",
  "quality_assessment": "Chapter provides comprehensive coverage of architectural analysis concepts and accurately documents implementation details. Most technical information is correct, but several CLI examples use non-existent command-line flags, and some configuration options are incorrectly documented.",
  "issues": [
    {
      "type": "incorrect_example",
      "severity": "high",
      "section": "Running Architectural Analysis",
      "description": "CLI examples use flags that don't exist in the actual implementation",
      "current_content": "# Full analysis with all architectural checks\ndebtmap analyze --include-architecture\n\n# Focus on circular dependencies\ndebtmap analyze --check circular-deps\n\n# Coupling analysis with custom threshold\ndebtmap analyze --coupling-threshold 5\n\n# Duplication detection with custom chunk size\ndebtmap analyze --duplication-min-lines 30",
      "should_be": "# Analysis includes architectural checks by default\ndebtmap analyze .\n\n# Duplication detection with custom chunk size\ndebtmap analyze . --threshold-duplication 30\n\n# Note: Circular dependencies and coupling are analyzed automatically\n# No separate flags exist for --include-architecture, --check, or --coupling-threshold",
      "fix_suggestion": "Replace all non-existent CLI flags with actual flags. Document that architectural analysis is built-in, not optional. The only configurable architectural flag is --threshold-duplication (not --duplication-min-lines).",
      "source_reference": "src/cli.rs:69 (threshold_duplication flag), src/commands/analyze.rs:23"
    },
    {
      "type": "incorrect_information",
      "severity": "medium",
      "section": "Configuration",
      "description": "Configuration section shows a [architectural] TOML table that doesn't exist in the actual implementation",
      "current_content": "[architectural]\n# Coupling threshold (modules with more dependencies flagged)\ncoupling_threshold = 5\n\n# Minimum lines for duplication detection\nduplication_min_lines = 50\n\n# Instability threshold for SDP violations\ninstability_threshold = 0.8\n\n# Minimum afferent coupling for SDP violations\nsdp_afferent_threshold = 2\n\n# Zone of pain thresholds\nzone_pain_abstractness = 0.2\nzone_pain_instability = 0.2\nzone_pain_afferent = 3\n\n# Zone of uselessness thresholds\nzone_useless_abstractness = 0.8\nzone_useless_instability = 0.8",
      "should_be": "# In .debtmap.toml or debtmap.toml\nthreshold_duplication = 50  # Minimum lines for duplication detection\n\n# Note: Coupling thresholds, instability thresholds, and zone detection\n# parameters are currently hardcoded in the implementation",
      "fix_suggestion": "Update configuration section to reflect actual configurable parameters. Document that most architectural thresholds are hardcoded (coupling threshold of 5, instability threshold of 0.8, SDP afferent threshold of 2, zone thresholds as shown in code). Only threshold_duplication is configurable via CLI or config file.",
      "source_reference": "src/debt/coupling.rs:70-76 (hardcoded thresholds), src/cli.rs:69 (configurable duplication)"
    },
    {
      "type": "outdated_information",
      "severity": "low",
      "section": "Duplication Configuration Reference",
      "description": "Chapter references 'features.json:21' for threshold_duplication but this is a documentation artifact, not source code",
      "current_content": "**Configuration reference:** `features.json:21` (threshold_duplication)",
      "should_be": "**Configuration reference:** `src/cli.rs:69` (threshold_duplication flag definition)",
      "fix_suggestion": "Update source references to point to actual source code files instead of documentation artifacts",
      "source_reference": "src/cli.rs:69"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Duplication Detection Algorithm",
      "description": "Chapter mentions 'default: 50 lines' for chunk size but doesn't clearly explain this is configurable",
      "should_add": "Add clear note that chunk size is configurable via --threshold-duplication flag (default: 50)",
      "fix_suggestion": "In the 'Code Duplication Detection' section, add a note: 'The minimum chunk size is configurable via the --threshold-duplication flag (default: 50 lines)'",
      "source_reference": "src/cli.rs:67-69"
    },
    {
      "type": "unclear_content",
      "severity": "low",
      "section": "Integration with Debt Categories",
      "description": "Section references features.json line numbers which are documentation artifacts, not source code",
      "current_content": "**Reference:** `features.json:240-253` (core_patterns section)\n**Reference:** `features.json:522-560` (tiered prioritization)",
      "should_be": "**Reference:** See source code in `src/core/mod.rs` for debt type definitions",
      "fix_suggestion": "Replace features.json references with actual source code locations where debt types and prioritization are defined",
      "source_reference": "src/core/mod.rs"
    }
  ],
  "positive_aspects": [
    "Comprehensive coverage of all architectural analysis features",
    "Accurate technical explanations of algorithms (DFS cycle detection, coupling metrics, hash-based duplication)",
    "Correct implementation references for core functions (circular.rs:44-66, coupling.rs line numbers)",
    "Excellent visual representations (main sequence diagram, decision flowchart)",
    "Good refactoring recommendations for each issue type",
    "Accurate code examples showing data structures (CouplingMetrics struct)",
    "Correct explanation of metrics formulas (instability, distance from main sequence)",
    "Proper note about cohesion analysis being a placeholder implementation",
    "Well-organized with clear progression from basic to advanced concepts"
  ],
  "improvement_suggestions": [
    "Replace all CLI examples with commands that actually work (use --threshold-duplication instead of non-existent flags)",
    "Clarify that architectural analysis runs automatically - no --include-architecture flag exists",
    "Document which thresholds are configurable vs hardcoded in the implementation",
    "Add a 'Limitations' section noting that most architectural thresholds cannot currently be configured",
    "Update all source references to point to actual Rust source files instead of features.json",
    "Add examples showing the actual JSON/terminal output format for architectural issues",
    "Consider adding a note about how to interpret architectural issues in CI/CD pipelines",
    "Add cross-references to related chapters (as the chapter does mention them at the end)"
  ],
  "metadata": {
    "analyzed_at": "2025-10-30",
    "feature_inventory": ".prodigy/book-analysis/features.json",
    "topics_covered": [
      "Circular dependency detection",
      "Coupling metrics (afferent, efferent)",
      "Bidirectional dependencies",
      "Stable dependencies principle",
      "Zone of pain detection",
      "Zone of uselessness detection",
      "Code duplication detection",
      "Refactoring recommendations"
    ],
    "validation_focus": "Check that architectural pattern detection and coupling analysis are documented",
    "implementation_files_verified": [
      "src/debt/circular.rs",
      "src/debt/coupling.rs",
      "src/debt/duplication.rs",
      "src/cli.rs",
      "src/commands/analyze.rs"
    ]
  }
}
