# Debtmap Configuration

[scoring]
# Weights for different scoring factors (must sum to 1.0)
# Balanced approach: coverage important but ROI and criticality guide smart prioritization
coverage = 0.20      # Weight for test coverage gaps
complexity = 0.15    # Weight for code complexity
roi = 0.15          # Weight for return on investment
semantic = 0.05     # Weight for semantic importance
dependency = 0.10   # Weight for dependency criticality
security = 0.10     # Weight for security issues
organization = 0.10 # Weight for code organization issues
performance = 0.15  # Weight for performance issues

[thresholds]
complexity = 10
duplication = 50
max_file_length = 500
max_function_length = 50

# Minimum thresholds for including items in debt analysis
# These help filter out trivial functions that aren't really technical debt
minimum_debt_score = 1.0              # Minimum unified score to include (0.0-10.0)
minimum_cyclomatic_complexity = 1     # Skip functions with cyclomatic <= this value
minimum_cognitive_complexity = 1      # Skip functions with cognitive <= this value  
minimum_risk_score = 1.0              # Minimum risk score for Risk debt types

# Validation thresholds for 'debtmap validate' command
[thresholds.validation]
max_average_complexity = 10.0         # Maximum allowed average complexity
max_high_complexity_count = 100       # Maximum allowed high complexity functions
max_debt_items = 2500                 # Maximum allowed technical debt items
max_total_debt_score = 1000           # Maximum allowed total debt score (unified scoring)
max_codebase_risk_score = 7.0         # Maximum allowed codebase risk score
max_high_risk_functions = 50          # Maximum allowed high-risk functions
min_coverage_percentage = 0.0         # Minimum required code coverage percentage (0 = no minimum)

[languages]
enabled = ["rust"]

[ignore]
patterns = [
    "target/**",
    "venv/**",
    "node_modules/**",
    "*.min.js",
    "benches/**"
]

[output]
default_format = "terminal"

[external_api]
# Enable automatic external API detection for testing
detect_external_api = false

# However, we can still explicitly mark certain functions as APIs if needed
# (Currently empty since debtmap doesn't expose any external APIs)
api_functions = []
api_files = []
