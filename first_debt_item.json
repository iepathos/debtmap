{
  "location": {
    "file": "src/analyzers/context_aware.rs",
    "function": "ContextAwareAnalyzer::filter_debt_items",
    "line": 40
  },
  "debt_type": {
    "ComplexityHotspot": {
      "cyclomatic": 13,
      "cognitive": 28
    }
  },
  "unified_score": {
    "complexity_factor": 8.1,
    "coverage_factor": 10.0,
    "dependency_factor": 1.0,
    "role_multiplier": 1.3,
    "final_score": 10.0
  },
  "function_role": "PureLogic",
  "recommendation": {
    "primary_action": "Extract validation logic, complex calculations to reduce complexity 13 → ~5",
    "rationale": "Complex function (cyclo=13, cog=28, nesting=3) with 2 suggested extraction patterns. Predicted complexity reduction: 61%",
    "implementation_steps": [
      "Identify validation checks from 3 branches → extract as validate_*()",
      "Extract calculations from 5 cognitive complexity → calculate_*()",
      "Add 8 unit tests (3-5 per extracted function)"
    ],
    "related_items": []
  },
  "expected_impact": {
    "coverage_improvement": 0.0,
    "lines_reduction": 0,
    "complexity_reduction": 6.5,
    "risk_reduction": 3.5
  },
  "transitive_coverage": null,
  "upstream_dependencies": 1,
  "downstream_dependencies": 10,
  "upstream_callers": [
    "ContextAwareAnalyzer::analyze"
  ],
  "downstream_callees": [
    "FunctionContext::with_file_type",
    "ContextDetector::new",
    "Applicative::unwrap",
    "detect_file_type",
    "adjust_priority",
    "ContextDetector::get_context_for_line",
    "ContextRuleEngine::get_reason",
    "ContextRuleEngine::evaluate",
    "debt_type_to_pattern",
    "FunctionContext::new"
  ],
  "nesting_depth": 3,
  "function_length": 106,
  "cyclomatic_complexity": 13,
  "cognitive_complexity": 28,
  "entropy_details": {
    "entropy_score": 0.29009939235701343,
    "pattern_repetition": 0.8682634730538922,
    "original_complexity": 13,
    "adjusted_complexity": 13,
    "dampening_factor": 1.0
  },
  "is_pure": false,
  "purity_confidence": 0.8
}
